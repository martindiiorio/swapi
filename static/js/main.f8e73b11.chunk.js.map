{"version":3,"sources":["serviceWorker.js","components/Navbar.js","components/ListFilms.js","components/Films.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Navbar","react_default","a","createElement","className","width","height","viewBox","fill","d","Component","ListFilms","films","this","props","map","film","keys","key","src","concat","title","alt","episode_id","release_date","href","index_es","icon","faChevronCircleRight","Films","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","reorderByDate","event","state","item","objectSpread","sort","b","setState","reorderByEpisode","getFilms","bind","assertThisInitialized","_this2","axios","get","then","res","data","results","onClick","type","components_ListFilms","App","components_Navbar","components_Films","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f8e73b11.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"bg-dark nav justify-content-center py-2 mb-3\">\n        <svg className=\"nav-item\" width=\"90px\" height=\"41.707px\" viewBox=\"5.222 537.035 90 41.707\">\n          <path fill=\"#FFFFFF\" d=\"M77.052,564.098c0.095,1.718,0.411,3.878,3.265,6.473c2.603,2.364-1.289,1.716-1.68,1.716 c0,0-6.101-0.007-7.687-0.007c-1.584,0-2.53-0.952-2.53-0.952c2.15,0,4.057-3.132,4.057-6.338c0-3.207-3.132-5.939-5.641-5.939 c-2.51,0-14.038,0-14.038,0v12.941H51.11l-3.655-13.051H27.707l-1.981,6.604l-1.98-6.604h-7.661l-1.716,6.604l-1.849-6.604H5.222 l5.844,19.811h5.943l2.869-9.376l2.546,9.376h5.811l3.875-13.208h2.962l-3.898,13.204h6.509l1.057-2.773h6.868l1.019,2.773 l13.305-0.013v-6.481c0,0,3.038,3.565,4.622,5.02c1.584,1.452,1.717,1.584,3.867,1.584l15.605-0.104 c2.245,0,5.641-2.076,5.641-5.51c0-1.384,0.027-2.144-1.596-3.972l-2.471-2.928c-1.416-1.319-0.122-1.458,1.066-1.458h8.556v-5.944 H81.875C78.441,558.941,76.957,562.382,77.052,564.098z M40.192,571.22l2.246-7.263l2.112,7.263H40.192z M64.458,567.631 c-1.812,0-4.527,0-4.527,0v-3.565c0,0,3.074,0,4.527,0C66.533,564.065,66.892,567.631,64.458,567.631z\"/>\n          <path fill=\"#FFFFFF\" d=\"M86.534,550.237c-2.509,0-2.509-0.924-2.509-0.924c2.15,0,4.057-3.132,4.057-6.34 c0-3.207-3.132-5.938-5.642-5.938c-2.509,0-14.037,0-14.037,0v13.202h-1.711l-3.697-13.202H22.557 c-3.435,0-5.113,3.297-5.019,5.015c0.096,1.716,0.411,3.878,3.265,6.472c2.603,2.365-1.289,1.716-1.681,1.716 c-1.98,0-13.899,0-13.899,0v6.604c0,0,17.07,0,19.315,0s5.113-2.076,5.113-5.511c0-1.379,0.529-2.282-1.095-4.108l-2.471-2.928 c-1.416-1.32,0.168-1.32,1.358-1.32c0.66,0,8.156,0,8.156,0v13.866h6.466v-13.866h8.744l-4.096,13.867h6.509l1.057-2.773h6.867 l1.02,2.773h13.371v-6.604c0,0,3.038,3.565,4.622,5.02c1.584,1.451,1.716,1.584,3.868,1.584c2.15,0,11.197,0,11.197,0v-6.604 C95.222,550.237,89.044,550.237,86.534,550.237z M55.731,549.313l2.245-7.264l2.112,7.264H55.731z M80.063,545.615 c-1.812,0-4.528,0-4.528,0v-3.565c0,0,3.074,0,4.528,0C82.138,542.05,82.497,545.615,80.063,545.615z\"/>\n        </svg>\n      </nav>\n    )\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronCircleRight } from '@fortawesome/free-solid-svg-icons'\n\nclass ListFilms extends Component {\n  render() {\n    const films = this.props.films;\n    return (\n      <div className=\"row\">\n        {\n          films.map((film, keys) => {\n            return (\n              <div className=\"col-sm-6 col-md-3 my-1\" key={keys}>\n                <div className=\"card\">\n                  <img width=\"100\" src={`/img/${film.title}.jpeg`} className=\"card-img-top\" alt={film.title} />\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title text-truncate\">{film.title}</h5>\n                    <p className=\"card-text\"><small className=\"text-muted\">{`Episode Nº: ${film.episode_id}`}</small></p>\n                    <p className=\"card-text\"><small className=\"text-muted\">{`Relesade Date: ${film.release_date}`}</small></p>\n                  </div>\n                  <div className=\"card-footer\">\n                    <a href=\"#\" className=\"btn btn-warning\">\n                      {'Details '} <FontAwesomeIcon icon={faChevronCircleRight} />\n                    </a>\n                  </div>\n                </div>\n              </div>\n            )\n          })\n        }\n      </div>\n    )\n  }\n}\n\nexport default ListFilms;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport ListFilms from './ListFilms'\n\nclass Films extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      films: [],\n    }\n\n    this.getFilms = this.getFilms.bind(this)\n  }\n\n  getFilms() {\n    return axios.get('https://swapi.co/api/films')\n      .then((res) => {\n        const films = res.data.results;\n        const keys = Object.keys(films)\n        // console.log(keys)\n        this.setState({\n          films: res.data.results,\n          keys: keys\n        })\n      })\n  }\n\n  reorderByDate = event => {\n    // console.log(...films.release_date);\n    var films = this.state.films.map(item => ({ ...item }));\n    films.sort((a, b) =>\n      a.release_date > b.release_date\n        ? 1\n        : b.release_date > a.release_date\n        ? -1\n        : 0\n    );\n    this.setState({ films });\n  };\n\n  reorderByEpisode = films => {\n    //console.log(...films.episode_id);\n    var films = this.state.films.map(item => ({ ...item }));\n    films.sort((a, b) =>\n      a.episode_id > b.episode_id ? 1 : b.episode_id > a.episode_id ? -1 : 0\n    );\n    this.setState({ films });\n  };\n\n  componentWillMount(){\n    this.getFilms();\n  }\n  render() {\n    const { films } = this.state;\n    return(\n      <div className=\"container\">\n        <div className=\"d-flex justify-content-center align-items-center mb-2\">\n          <p className=\"mb-0 mr-2\">Filter by:</p>\n          <button onClick={this.reorderByDate} type=\"button\" className=\"btn btn-warning btn-sm\">Released Date</button>\n          <p className=\"mb-0 mx-2\">or:</p>\n          <button onClick={this.reorderByEpisode} type=\"button\" className=\"btn btn-warning btn-sm\">Episode Number</button>\n        </div>\n        <ListFilms films={films} />\n      </div>\n    )\n  }\n};\n\nexport default Films;\n","import React, { Component } from 'react';\nimport Navbar from './components/Navbar'\nimport Films from './components/Films';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <Films />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}